topic-01:安装编译工具及库文件
	yum -y install make zlib zlib-devel gcc-c++ libtool openssl openssl-devel

创建文件夹 mkdir -p /usr/developer/nginx
topic-02:安装PCRE
	cd /usr/developer/nginx
	a.下载pcre安装
	wget http://downloads.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.tar.gz

	b.解压安装包
	tar -zxvf pcre-8.35.tar.gz

	c.进入目录
	cd pcre-8.35

	d.编译安装
	./configure
	make && make install
	
	e.查看pcre版本
	pcre-config --version

topic-03:安装nginx
	a.进入目录 
	cd /usr/developer/nginx

	b.下载nginx
	wget http://nginx.org/download/nginx-1.6.2.tar.gz

	c.解压
	tar -zxvf nginx-1.6.2.tar.gz

	d.进入目录
	cd nginx-1.6.2
	
	e.编译安装

	./configure --prefix=/usr/local/webserver/nginx --with-http_stub_status_module --with-http_ssl_module --with-pcre=/usr/developer/nginx/pcre-8.45
	./configure --prefix=/data/webserver/nginx --with-http_stub_status_module --with-http_ssl_module --with-pcre=/data/nginx/pcre-8.45

	make
	make install

	f.查看是否安转成功
	/usr/local/webserver/nginx/sbin/nginx -v #如果打印出nginx的版本号，安装成功

topic-04:nginx的配置
	a.创建nginx运行使用的用户www
	/usr/sbin/groupadd www
	/usr/sbin/useradd -g www www

	b.替换配置文件nginx.conf ，将/user/local/webserver/nginx/conf/nginx.conf,替换成如下内容
user www www;
worker_processes 2; #设置值和CPU核心数一致
error_log /usr/local/webserver/nginx/logs/nginx_error.log crit; #日志位置和日志级别
pid /usr/local/webserver/nginx/nginx.pid;
#Specifies the value for maximum file descriptors that can be opened by this process.
worker_rlimit_nofile 65535;
events
{
  use epoll;
  worker_connections 65535;
}
http
{
  include mime.types;
  default_type application/octet-stream;
  log_format main  '$remote_addr - $remote_user [$time_local] "$request" '
               '$status $body_bytes_sent "$http_referer" '
               '"$http_user_agent" $http_x_forwarded_for';
  
#charset gb2312;
     
  server_names_hash_bucket_size 128;
  client_header_buffer_size 32k;
  large_client_header_buffers 4 32k;
  client_max_body_size 8m;
     
  sendfile on;
  tcp_nopush on;
  keepalive_timeout 60;
  tcp_nodelay on;
  fastcgi_connect_timeout 300;
  fastcgi_send_timeout 300;
  fastcgi_read_timeout 300;
  fastcgi_buffer_size 64k;
  fastcgi_buffers 4 64k;
  fastcgi_busy_buffers_size 128k;
  fastcgi_temp_file_write_size 128k;
  gzip on; 
  gzip_min_length 1k;
  gzip_buffers 4 16k;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_types text/plain application/x-javascript text/css application/xml;
  gzip_vary on;
 
  #limit_zone crawler $binary_remote_addr 10m;
 #下面是server虚拟主机的配置
 server
  {
    listen 80;#监听端口
    server_name localhost;#域名
    index index.html index.htm index.php;
    root /usr/local/webserver/nginx/html;#站点目录
      location ~ .*\.(php|php5)?$
    {
      #fastcgi_pass unix:/tmp/php-cgi.sock;
      fastcgi_pass 127.0.0.1:9000;
      fastcgi_index index.php;
      include fastcgi.conf;
    }
    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|ico)$
    {
      expires 30d;
  # access_log off;
    }
    location ~ .*\.(js|css)?$
    {
      expires 15d;
   # access_log off;
    }
    access_log off;
  }

}


	d.检查配置文件nginx.conf是否正确
	/usr/local/webserver/nginx/sbin/nginx -t

	e.启动nginx
	/usr/local/webserver/nginx/sbin/nginx

	d.浏览器访问，如果出现nginx的欢迎页面，启动成功
	
## Nginx 其他命令

/usr/local/webserver/nginx/sbin/nginx -s reload            # 重新载入配置文件
/usr/local/webserver/nginx/sbin/nginx -s reopen            # 重启 Nginx
/usr/local/webserver/nginx/sbin/nginx -s stop              # 停止 Nginx




